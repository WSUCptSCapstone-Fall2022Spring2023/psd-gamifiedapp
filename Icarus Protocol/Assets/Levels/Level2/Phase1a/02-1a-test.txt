shieldsActive = False
powerSupply = 20

testCases = [
[True, 80],
[True, 20],
[False, 80],
[False, 20],
[True, 70],
[False, 70],
[True, 71],
[False, 71],
[True, 69],
[False, 69]
]

errorCode = 0
pulses = 0

def ShieldPulse():
	global shieldsActive
	global powerSupply
	global errorCode
	global pulses

	if not shieldsActive or powerSupply <= 70:
		errorCode = 1
	pulses += 1	

def simulate():
	global shieldsActive
	global powerSupply
	global pulses
	global testCases

	shieldsActive = testCases[0][0]
	powerSupply = testCases[0][1]

	parent.push_user_scope()

	testCases.pop(0)

	try:
    		parent.execute_user_code()
	except Exception: 
    		pass

	if errorCode == 1:
		parent.end_simulation(1)
	
	if len(testCases) == 0:
		if pulses != 2:
			parent.end_simulation(2)
		else:
			parent.end_simulation(0)

def simulate_tick():
	return 0