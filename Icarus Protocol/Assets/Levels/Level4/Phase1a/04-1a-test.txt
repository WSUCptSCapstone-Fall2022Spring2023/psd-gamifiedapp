badScan = False
outOfRangeID = False
skippedCell = False
lastScan = 0

def CellFullness(cellID):
	global outOfRangeID

	if cellID < 1 or cellID > 986:
		outOfRangeID = True
		return 0
	return (cellID * 17 + 1038) % 100 

def Scan(cellID, scanPower):
	global badScan
	global lastScan
	global skippedCell
	
	if cellID != lastScan + 1:
		skippedCell = True
		return

	if scanPower != (CellFullness(cellID) * 178 / 19 - 9):
		badScan = True
	lastScan += 1
	

def simulate():
	global badScan
	global outOfRangeID
	global skippedCell
	global lastScan

	try:
    		parent.execute_user_code()
	except Exception as e: 
    		parent.end_simulation(-1, repr(e))
		return
	
	if skippedCell:
		parent.end_simulation(3)
	elif lastScan != 986:
		parent.end_simulation(4)
	elif outOfRangeID:
		parent.end_simulation(1)
	elif badScan:
		parent.end_simulation(2)
	else:
		parent.end_simulation(0)
	

def simulate_tick():
	return 0