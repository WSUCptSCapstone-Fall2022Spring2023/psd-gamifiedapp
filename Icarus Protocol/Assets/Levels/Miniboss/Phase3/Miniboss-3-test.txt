threatsPresent = True
countermeasure = 0
identifyCalled = False

def IdentifyThreat():
	global identifyCalled
	
	identifyCalled = True
	return "malicious agent"

def simulate():
	global counterMeasure
	global threatsPresent
	global identifyCalled
	
	try:
    		parent.execute_user_code()
	except Exception as e:
		if "SyntaxError(\"unexpected token '='\", (None, 5, 18, '\\telif threatType = \"logic bomb\":\\n'))" in repr(e):
			parent.end_simulation(2)
		elif "SyntaxError(\"can't assign to literal\", (None, 8, 3, '\\t\\t694 = countermeasure'))" in repr(e):
			parent.end_simulation(3)
		else:
			parent.end_simulation(-1, repr(e)) 
    		return
	
	if threatsPresent and identifyCalled and countermeasure == 694:
		parent.end_simulation(0)
	else:
		parent.end_simulation(1)

def simulate_tick():
	return 0