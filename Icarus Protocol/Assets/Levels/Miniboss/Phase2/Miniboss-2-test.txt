motionAmount = 0
motionTests = [1,11,3,10,9,11,19,3]
errorCode = 0

def Send(signal):
	global motionAmount
	global motionTests
	global errorCode

	errorCode = 0
	if (signal == "alarm" and motionTests[0] <= 10) or (signal == "clear" and motionTests[0] > 10):
		errorCode = 1
	motionTests = motionTests[1:]

def simulate():
	global motionTests
	global errorCode
	
	errorCode = 1
	try:
    		parent.execute_user_code()
	except Exception as e:
		if "SyntaxError(\"unexpected token '<newline>'\", (None, 3, 5, 'else\\n'))" in repr(e):
			parent.end_simulation(2)
		elif "SyntaxError('expected an indented block', (None, 4, 1, \"Send('clear')\"))" in repr(e):
			parent.end_simulation(3)
		else:
			parent.end_simulation(-1, repr(e)) 
    		return

	if len(motionTests) == 0:
		if errorCode == 0:
			environment.trigger_action_group(0)
			parent.end_simulation(0)
		else:
			parent.end_simulation(1)


def simulate_tick():
	return 0