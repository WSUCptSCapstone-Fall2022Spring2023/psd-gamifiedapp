probes = [False, False, False, False, False, False, False, False, False, False]
expected = [True, False, False, False, False, True, False, False, False, True]

def simulate():
	global probes
	global expected

	try:
    		parent.execute_user_code()
	except Exception as e:
		if 'index out of range' in repr(e):
			parent.end_simulation(5)
		else:
			parent.end_simulation(-1, repr(e))
    		return
	
	if probes == expected:
		parent.end_simulation(0)
	elif probes == [False, False, False, False, False, False, False, False, False, False]:
		parent.end_simulation(1)
	elif len(filter(lambda x: x == True, probes)) < 3:
		parent.end_simulation(2)
	elif len(filter(lambda x: x == True, probes)) > 3:
		parent.end_simulation(3)
	else:
		parent.end_simulation(4)
	return
		

def simulate_tick():
	return 0