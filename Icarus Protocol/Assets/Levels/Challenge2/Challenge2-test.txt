baseValues = [5,7,13,19,23]
dataRemaining = 100
decrypted = 0

def Remaining():
	global dataRemaining
	return dataRemaining

def Receive():
	global dataRemaining
	dataRemaining -= 1

def GetData():
	global dataRemaining
	global baseValues

	if dataRemaining == 0 and len(baseValues) > 0:
		return baseValues[0]
	else:
		return 0


def simulate():
	global dataRemaining
	global decrypted
	global baseValues

	try:
    		parent.execute_user_code()
	except Exception as e:
		parent.end_simulation(-1, repr(e)) 
    		return

	if dataRemaining <= 0:
		if decrypted == baseValues[0] + 2973 * 7119374 / 81738 % 1836:
			baseValues.remove(baseValues[0])
			dataRemaining = 100
		else:
			parent.end_simulation(2)
			return

		if len(baseValues) == 0:
			parent.end_simulation(0)
	else:
		parent.end_simulation(1)


def simulate_tick():
	return 0